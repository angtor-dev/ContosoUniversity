@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Estudiantes";
    ViewData["page"] = "students";
    void iconSortDown()
    {
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM390.6 246.6l-112 112C272.4 364.9 264.2 368 256 368s-16.38-3.125-22.62-9.375l-112-112c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L256 290.8l89.38-89.38c12.5-12.5 32.75-12.5 45.25 0S403.1 234.1 390.6 246.6z"/></svg>
    }

    void iconSortUp()
    {
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM390.6 310.6c-12.5 12.5-32.75 12.5-45.25 0L256 221.3L166.6 310.6c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l112-112C239.6 147.1 247.8 144 256 144s16.38 3.125 22.62 9.375l112 112C403.1 277.9 403.1 298.1 390.6 310.6z"/></svg>
    }
}

<h2>Estudiantes</h2>

<p>
    <a asp-page="Create">Registrar Nuevo</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p class="search-wrapper">
            Buscar por nombre:
            <input type="text" name="q" value="@Model.CurrentFilter" class="search" autocomplete="off" />
            <input type="submit" value="Buscar" class="btn btn-primary" /> |
            <a asp-page="./Index" class="btn btn-light btn-filtros">Limpiar filtros</a>
        </p>
    </div>
</form>

<div></div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-o="@Model.IdSort"
                   asp-route-cq="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Students[0].ID)
                    </a>
                    @if (Model.CurrentSort == "id") {
                        <span class="sort-icon">@{iconSortDown();}</span>
                } else if (Model.CurrentSort == "id_desc") {
                        <span class="sort-icon">@{iconSortUp();}</span>
                }
                </th>
                <th>
                    <a asp-page="./Index" asp-route-o="@Model.NameSort"
                   asp-route-cq="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Students[0].LastName)
                    </a>
                    @if (Model.CurrentSort == "name_desc") {
                        <span class="sort-icon">@{iconSortUp();}</span>
                } else if (Model.CurrentSort == "" || Model.CurrentSort == null) {
                        <span class="sort-icon">@{iconSortDown();}</span>
                }
                </th>
                <th>
                    <a asp-page="./Index" asp-route-o="@Model.FirstNameSort"
                   asp-route-cq="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Students[0].FirstMidName)
                    </a>
                    @if (Model.CurrentSort == "fname") {
                        <span class="sort-icon">@{iconSortDown();}</span>
                } else if (Model.CurrentSort == "fname_desc") {
                        <span class="sort-icon">@{iconSortUp();}</span>
                }
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Students[0].FullName)
                </th>
                <th>
                    <a asp-page="./Index" asp-route-o="@Model.DateSort"
                   asp-route-cq="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
                    </a>
                    @if (Model.CurrentSort == "Date") {
                        <span class="sort-icon">@{iconSortDown();}</span>
                } else if (Model.CurrentSort == "date_desc") {
                        <span class="sort-icon">@{iconSortUp();}</span>
                }
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Students) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Editar</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Detalles</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Eliminar</a>
                </td>
            </tr>
    }
        </tbody>
    </table>

    @{
    var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Index"
   asp-route-o="@Model.CurrentSort"
   asp-route-p="@(Model.Students.PageIndex - 1)"
   asp-route-cq="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
        Anterior
    </a>
    <a asp-page="./Index"
   asp-route-o="@Model.CurrentSort"
   asp-route-p="@(Model.Students.PageIndex + 1)"
   asp-route-cq="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
        Siguiente
    </a>
